definitions:
  handlers.CreateDirectoryRequest:
    properties:
      name:
        type: string
      path:
        type: string
    type: object
  handlers.CreateDirectoryResponse:
    properties:
      directory:
        $ref: '#/definitions/handlers.FileInfo'
      path:
        type: string
    type: object
  handlers.DeleteDirectoryRequest:
    properties:
      path:
        type: string
    type: object
  handlers.DeleteDirectoryResponse:
    properties:
      path:
        type: string
    type: object
  handlers.FileInfo:
    properties:
      isDir:
        type: boolean
      modTime:
        type: string
      name:
        type: string
      size:
        type: integer
    type: object
  handlers.GetDirectoryContentsRequest:
    properties:
      path:
        type: string
    type: object
  handlers.GetDirectoryContentsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/handlers.FileInfo'
        type: array
      path:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /admin/users:
    get:
      description: Get All Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Users
      tags:
      - admin
  /check-session:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Check Session
      tags:
      - auth
  /create-directory:
    post:
      consumes:
      - application/json
      description: Create a new directory
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateDirectoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: New Directory
          schema:
            $ref: '#/definitions/handlers.CreateDirectoryResponse'
      summary: Create Directory
      tags:
      - homeshare
  /delete-directory:
    delete:
      consumes:
      - application/json
      description: Delete a directory
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.DeleteDirectoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Deleted Directory
          schema:
            $ref: '#/definitions/handlers.DeleteDirectoryResponse'
      summary: Delete Directory
      tags:
      - homeshare
  /directory-contents:
    post:
      consumes:
      - application/json
      description: Get contents of a directory
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.GetDirectoryContentsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Directory Contents
          schema:
            $ref: '#/definitions/handlers.GetDirectoryContentsResponse'
      summary: Directory Contents
      tags:
      - homeshare
  /login:
    post:
      description: Login
      responses: {}
      summary: Login
      tags:
      - auth
  /logout:
    get:
      description: Logout
      responses:
        "200":
          description: OK
      summary: Logout
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            type: string
      summary: Register User
      tags:
      - auth
swagger: "2.0"
